////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Project name     : eCapture
// Client           : Energy Australia, via AEC Systems, Sydney
//
// File name        : SelectTemplateDlg.cpp
// Created          : 23rd October 2009
// Created by       : S. Jaisimha
// Description      : Template selection dialog implementation
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "StdAfx.h"
#include "Resource.h"
#include "SelectTemplateDlg.h"


// CSelectTemplateDlg dialog
IMPLEMENT_DYNAMIC(CSelectTemplateDlg, CDialog)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Function     : CSelectTemplateDlg::CSelectTemplateDlg
// Description  : Default constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CSelectTemplateDlg::CSelectTemplateDlg(CWnd* pParent /*=NULL*/)	: CDialog(CSelectTemplateDlg::IDD, pParent)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Function     : CSelectTemplateDlg::~CSelectTemplateDlg
// Description  : Default destructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CSelectTemplateDlg::~CSelectTemplateDlg()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Function     : CSelectTemplateDlg::DoDataExchange
// Description  : Dialog to variable data transfer
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CSelectTemplateDlg::DoDataExchange(CDataExchange* pDX)
{
  CDialog::DoDataExchange(pDX);
  DDX_Control(pDX, IDC_STD_LIST,  m_lcTemplates);
  DDX_Text(pDX, IDC_STD_PATH,     m_csStdPath);
  DDX_Text(pDX, IDC_SEL_TEMPLATE, m_csTemplate);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Function     : BEGIN_MESSAGE_MAP
// Description  : Message handlers
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN_MESSAGE_MAP(CSelectTemplateDlg, CDialog)
  ON_BN_CLICKED(IDC_BROWSE,          &CSelectTemplateDlg::OnBnClickedBrowse)
  ON_BN_CLICKED(IDHELP,              &CSelectTemplateDlg::OnBnClickedHelp)
  ON_BN_CLICKED(IDOK,                &CSelectTemplateDlg::OnBnClickedOk)
  ON_NOTIFY(NM_CLICK,  IDC_STD_LIST, &CSelectTemplateDlg::OnClickTemplateList)
  ON_NOTIFY(NM_DBLCLK, IDC_STD_LIST, &CSelectTemplateDlg::OnDoubleClickTemplateList)
END_MESSAGE_MAP()


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Function     : CSelectTemplateDlg::OnInitDialog
// Description  : Called before the dialog is displayed on screen
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL CSelectTemplateDlg::OnInitDialog()
{
  // Call the parent implementation
  CDialog::OnInitDialog();

  // Initialize the list control
  m_lcTemplates.InsertColumn(0, _T("Select template to use"), LVCFMT_LEFT, 225);
  m_lcTemplates.InsertColumn(1, _T("Date modified"),          LVCFMT_LEFT, 120);
  m_lcTemplates.SetExtendedStyle(LVS_EX_FULLROWSELECT | LVS_EX_GRIDLINES);

  // List the DWT files in that location
  int iRow = 0;
  CString csLoc; 
  CFileFind ffTemplates;
  CFileStatus fsTemplate; 
  csLoc.Format(_T("%s\\*.dwt"), m_csStdPath);
  BOOL bFound = ffTemplates.FindFile(csLoc);
  while (bFound)
  {
    bFound = ffTemplates.FindNextFile();
    CFile::GetStatus(ffTemplates.GetFilePath(), fsTemplate);
    m_lcTemplates.InsertItem(iRow, ffTemplates.GetFileName());
    m_lcTemplates.SetItemText(iRow++, 1, fsTemplate.m_mtime.Format(_T("%d-%m-%Y %H:%M")));
  }

  // Everything is OK
  return TRUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Function     :  CSelectTemplateDlg::OnClickTemplateList
// Description  : Called when the user clicks on a template in the list
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CSelectTemplateDlg::OnClickTemplateList(NMHDR *pNMHDR, LRESULT *pResult)
{
  // Show the selected template in the edit box
  SetDlgItemText(IDC_SEL_TEMPLATE, m_lcTemplates.GetItemText(m_lcTemplates.GetSelectionMark(), 0));
  
  // Nullify the result
  *pResult = 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Function     :  CSelectTemplateDlg::OnDoubleClickTemplateList
// Description  : Called when the user clicks on a template in the list
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CSelectTemplateDlg::OnDoubleClickTemplateList(NMHDR *pNMHDR, LRESULT *pResult)
{
  // Show the selected template in the edit box
  SetDlgItemText(IDC_SEL_TEMPLATE, m_lcTemplates.GetItemText(m_lcTemplates.GetSelectionMark(), 0));

  // Nullify the result
  *pResult = 0;

  // Call the OK reactor
  OnBnClickedOk();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Function     :  CSelectTemplateDlg::OnBnClickedBrowse
// Description  : Called when the user clicks on the "..." button
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CSelectTemplateDlg::OnBnClickedBrowse()
{
  // Display the browse dialog for selecting templates
  CFileDialog dlgTemplate(TRUE, _T("dwt"), _T(""), 0, _T("Drawing Template (*.dwt)|*.dwt||"));
  if (dlgTemplate.DoModal() == IDCANCEL) return;

  // Show the selected template
  SetDlgItemText(IDC_SEL_TEMPLATE, dlgTemplate.GetPathName());
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Function     :  CSelectTemplateDlg::OnBnClickedHelp
// Description  : Called when the user clicks on the "Help..." button
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CSelectTemplateDlg::OnBnClickedHelp()
{
  // Display the associated help topic
  displayHelp((DWORD)_T("Translator.htm"));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Function     :  CSelectTemplateDlg::OnBnClickedOk
// Description  : Called when the user clicks on the "OK" button
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CSelectTemplateDlg::OnBnClickedOk()
{
  // Ensure that a template is selected
  UpdateData();
  if (m_csTemplate.IsEmpty()) { appMessage(_T("A template must be selected.")); return; }

  // Close the dialog
  OnOK();
}
